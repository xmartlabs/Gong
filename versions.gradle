/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/

def androidVersions = [:]
androidVersions.minSdk = 21
androidVersions.compileSdk = 30
androidVersions.buildTools = '30.0.2'
androidVersions.targetSdk = 30
ext.androidVersions = androidVersions

ext.deps = [:]
def versions = [:]
versions.androidSwissKnife = "44f27ec213"
versions.androidXAppCompat = "1.3.0-beta01"
versions.androidXBrowser = "1.2.0"
versions.androidXCardView = "1.0.0"
versions.androidXConstraintLayout = "2.0.4"
versions.androidXCore = "1.2.0"
versions.androidXDataStore = "1.0.0-alpha06"
versions.androidXLifecycle = "2.3.0"
versions.androidXMaterial = "1.3.0"
versions.androidXPercentLayout = "1.0.0"
versions.androidXRoom = "2.3.0"
versions.androidXTestEspresso = "3.3.0"
versions.androidXTestJunit = "1.1.2"
versions.androidXTransition = "1.4.0"
versions.androidXViewPager2 = "1.0.0"
versions.archLifecycle = "2.2.0"
versions.archNavigationArchComponent = "2.3.3"
versions.archWorkManager = '2.3.4'
versions.coil = "1.2.0"
versions.constraint_layout = "2.0.1"
versions.compose = "1.0.0-beta05"
versions.composeConstraintLayout = "1.0.0-alpha05"
versions.composeMaterial = "1.0.0-beta05"
versions.composeNavigation = "1.0.0-alpha10"
versions.composeViewModel = "1.0.0-alpha04"
versions.dependencyUpdates = '0.38.0'
versions.detekt = "1.16.0"
versions.firebase_crashlyticsPlugin = '2.5.2'
versions.firebase_analytics = "17.4.1"
versions.firebase_config = "19.1.3"
versions.firebase_crashlytics = "17.4.0"
versions.firebase_messaging = "20.1.6"
versions.googleServices = "4.3.5"
versions.androidGradle = "7.0.0-alpha15"
versions.gson = "2.8.6"
versions.junit = "4.13.2"
versions.koin = "3.0.1"
versions.kotlin = "1.4.32"
versions.kotlinCoroutines = "1.4.3"
versions.leakcanary = "2.7"
versions.lottie = "3.4.0"
versions.ok2CurlInterceptor = "0.7.0"
versions.okhttp3 = "4.9.1"
versions.okIo = "2.10.0"
versions.once = "1.3.0"
versions.recyclerDragSelect = "53d66e0eb5"
versions.recyclerView = "1.1.0"
versions.retrofit2 = "2.9.0"
versions.rxAndroid = "2.1.1"
versions.rxKotlin = "2.4.0"
versions.snapshotPublisher = "e6e1a923ed"
versions.stetho = "1b2c025a14"
versions.timber = "4.7.1"
versions.tooLargeTool = "915ad99e83"
ext.versions = versions


def deps = [:]
deps.coil = "io.coil-kt:coil:$versions.coil"
deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.junit = "junit:junit:$versions.junit"
deps.leakcanary = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
deps.lottie = "com.airbnb.android:lottie:$versions.lottie"
deps.okIo = "com.squareup.okio:okio:$versions.okIo"
deps.once = "com.jonathanfinerty.once:once:$versions.once"
deps.stetho = "com.github.mathroule.stetho:stetho:$versions.stetho" // https://github.com/facebook/stetho/issues/652
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.tooLargeTool = "com.github.xmartlabs:toolargetool:$versions.tooLargeTool"

def compose = [:]
compose.compiler = "androidx.compose.compiler:compiler:$versions.compose"
compose.constraintLayout = "androidx.constraintlayout:constraintlayout-compose:$versions.composeConstraintLayout"
compose.foundation = "androidx.compose.foundation:foundation:$versions.compose"
compose.liveData = "androidx.compose.runtime:runtime-livedata:$versions.compose"
compose.material = "androidx.compose.material:material:$versions.composeMaterial"
compose.navigation = "androidx.navigation:navigation-compose:$versions.composeNavigation"
compose.runtime = "androidx.compose.runtime:runtime:$versions.compose"
compose.tooling = "androidx.compose.ui:ui-tooling:$versions.compose"
compose.ui = "androidx.compose.ui:ui:$versions.compose"
compose.viewModel = "androidx.lifecycle:lifecycle-viewmodel-compose:$versions.composeViewModel"
deps.compose = compose

def koin = [:]
koin.android = "io.insert-koin:koin-android:$versions.koin"
koin.compose = "io.insert-koin:koin-androidx-compose:$versions.koin"
deps.koin = koin

def kotlin = [:]
kotlin.core = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.coroutines = [:]
kotlin.coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinCoroutines"
kotlin.coroutines.playServices = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$versions.kotlinCoroutines"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect"
deps.kotlin = kotlin

def androidSwissKnife = [:]
androidSwissKnife.core = "com.github.xmartlabs.AndroidSwissKnife:swissknife-core:$versions.androidSwissKnife"
androidSwissKnife.dataStore = "com.github.xmartlabs.AndroidSwissKnife:swissknife-datastore:$versions.androidSwissKnife"
androidSwissKnife.navigation = "com.github.xmartlabs.AndroidSwissKnife:swissknife-navigation:$versions.androidSwissKnife"
androidSwissKnife.navigationDebug = "com.github.xmartlabs.AndroidSwissKnife:swissknife-navigation-debug:$versions.androidSwissKnife"
deps.androidSwissKnife = androidSwissKnife

def androidXTest = [:]
androidXTest.espresso = "androidx.test.espresso:espresso-core:$versions.androidXTestEspresso"
androidXTest.junit = "androidx.test.ext:junit:$versions.androidXTestJunit"

def androidXLifecycle = [:]
androidXLifecycle.livedata = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.androidXLifecycle"
androidXLifecycle.runtime = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.androidXLifecycle"
androidXLifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidXLifecycle"
androidXLifecycle.saveState = "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.archLifecycle"

def androidXNavigation = [:]
androidXNavigation.fragment = "androidx.navigation:navigation-fragment-ktx:$versions.archNavigationArchComponent"
androidXNavigation.ui = "androidx.navigation:navigation-ui-ktx:$versions.archNavigationArchComponent"

def androidXRoom = [:]
androidXRoom.compiler = "androidx.room:room-compiler:$versions.androidXRoom"
androidXRoom.coreKtx = "androidx.room:room-ktx:$versions.androidXRoom"

def androidX = [:]
androidX.appcompat = "androidx.appcompat:appcompat:$versions.androidXAppCompat"
androidX.browser = "androidx.browser:browser:$versions.androidXBrowser"
androidX.cardview = "androidx.cardview:cardview:$versions.androidXCardView"
androidX.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
androidX.core = "androidx.core:core-ktx:$versions.androidXCore"
androidX.dataStore = "androidx.datastore:datastore-preferences:$versions.androidXDataStore"
androidX.design = "com.google.android.material:material:$versions.androidXMaterial"
androidX.exifinterface = "androidx.exifinterface:exifinterface:$versions.androidXExifinterface"
androidX.lifecycle = androidXLifecycle
androidX.navigation = androidXNavigation
androidX.percentlayout = "androidx.percentlayout:percentlayout:$versions.androidXPercentLayout"
androidX.preference = "androidx.preference:preference:$versions.androidXPreferences"
androidX.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerView"
androidX.room = androidXRoom
androidX.test = androidXTest
androidX.transition = "androidx.transition:transition:$versions.androidXTransition"
androidX.viewPager2 = "androidx.viewpager2:viewpager2:$versions.androidXViewPager2"
androidX.workManager = "androidx.work:work-runtime-ktx:$versions.archWorkManager"
deps.androidX = androidX


def playServices = [:]
playServices.location = "com.google.android.gms:play-services-location:$versions.playServicesLocation"
playServices.vision = "com.google.android.gms:play-services-vision:$versions.playServicesVision"
deps.playServices = playServices

def firebase = [:]
firebase.analytics = "com.google.firebase:firebase-analytics:$versions.firebase_analytics"
firebase.config = "com.google.firebase:firebase-config-ktx:$versions.firebase_config"
firebase.crashlytics = "com.google.firebase:firebase-crashlytics:$versions.firebase_crashlytics"
firebase.messaging = "com.google.firebase:firebase-messaging:$versions.firebase_messaging"
deps.firebase = firebase

def okhttp3 = [:]
okhttp3.core = "com.squareup.okhttp3:okhttp:$versions.okhttp3"
okhttp3.loggingIntercepror = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
okhttp3.ok2CurlInterceptor = "com.github.mrmike:ok2curl:$versions.ok2CurlInterceptor"
okhttp3.urlconnection = "com.squareup.okhttp3:okhttp-urlconnection:$versions.okhttp3"
okhttp3.stetho = "com.github.mathroule.stetho:stetho-okhttp3:$versions.stetho"
deps.okhttp3 = okhttp3

def retrofit2 = [:]
retrofit2.core = "com.squareup.retrofit2:retrofit:$versions.retrofit2"
retrofit2.gsonAdapter = "com.squareup.retrofit2:converter-gson:$versions.retrofit2"
deps.retrofit2 = retrofit2


ext.deps = deps

ext.buildscriptDeps = [:]
buildscriptDeps.dependencyUpdates = "com.github.ben-manes:gradle-versions-plugin:$versions.dependencyUpdates"
buildscriptDeps.detekt = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$versions.detekt"
buildscriptDeps.firebaseCrashlyticsPlugin = "com.google.firebase:firebase-crashlytics-gradle:$versions.firebase_crashlyticsPlugin"
buildscriptDeps.googleServices = "com.google.gms:google-services:$versions.googleServices"
buildscriptDeps.androidGradle = "com.android.tools.build:gradle:$versions.androidGradle"
buildscriptDeps.kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
buildscriptDeps.navigationSafeArgPlugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.archNavigationArchComponent"
buildscriptDeps.snapshotPublisher = "com.github.xmartlabs:android-snapshot-publisher:$versions.snapshotPublisher"
ext.buildscriptDeps = buildscriptDeps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.mavenCentral()
    handler.gradlePluginPortal()
    handler.maven { url "https://jitpack.io" }
}

ext.addRepos = this.&addRepos
